# Testing BaseGeometry class
>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

# Creating a BaseGeometry instance
>>> bGeo = BaseGeometry()

# Testing area() method
>>> bGeo.area()
Traceback (most recent call last):
  ...
Exception: area() is not implemented

# Testing integer_validator() method with invalid arguments
>>> bGeo.integer_validator("param1", "Goal")
Traceback (most recent call last):
  ...
TypeError: param1 must be an integer

>>> bGeo.integer_validator("param2", True)
Traceback (most recent call last):
  ...
TypeError: param2 must be an integer

>>> bGeo.integer_validator("param3", -5)
Traceback (most recent call last):
  ...
ValueError: param3 must be greater than 0

>>> bGeo.integer_validator("param4", 0)
Traceback (most recent call last):
  ...
ValueError: param4 must be greater than 0

# Testing integer_validator() method with valid arguments
>>> bGeo.integer_validator("param5", 5)

# Testing integer_validator() method with missing arguments
>>> bGeo.integer_validator("param6")
Traceback (most recent call last):
  ...
TypeError: BaseGeometry.integer_validator() missing 1 required positional argument: 'value'

# Testing integer_validator() method with missing arguments
>>> bGeo.integer_validator()
Traceback (most recent call last):
  ...
TypeError: BaseGeometry.integer_validator() missing 2 required positional arguments: 'name' and 'value'

# Testing integer_validator() method with too many arguments
>>> bGeo.integer_validator("param7", 1, 2)
Traceback (most recent call last):
  ...
TypeError: BaseGeometry.integer_validator() takes 3 positional arguments but 4 were given

# Testing area() method with invalid argument count
>>> bGeo.area(5)
Traceback (most recent call last):
  ...
TypeError: BaseGeometry.area() takes 1 positional argument but 2 were given

>>> bGeo.area(5, 5)
Traceback (most recent call last):
  ...
TypeError: BaseGeometry.area() takes 1 positional argument but 3 were given

# Testing integer_validator() with different data types
>>> bGeo.integer_validator("param8", (4,))
Traceback (most recent call last):
  ...
TypeError: param8 must be an integer

>>> bGeo.integer_validator("param9", [3])
Traceback (most recent call last):
  ...
TypeError: param9 must be an integer

>>> bGeo.integer_validator("param10", {3, 4})
Traceback (most recent call last):
  ...
TypeError: param10 must be an integer

>>> bGeo.integer_validator("param11", None)
Traceback (most recent call last):
  ...
TypeError: param11 must be an integer

